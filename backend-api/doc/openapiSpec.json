{
  "openapi": "3.0.0",
  "info": {
    "title": "Restaurant Management API",
    "version": "1.0.0",
    "description": "API for managing restaurant operations (users, dishes, orders, etc.)",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register new user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User created" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "JWT token" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "default": 1 },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "default": 10 },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": { "description": "List of users" }
        }
      },
      "post": {
        "summary": "Create user",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "201": { "description": "User created" }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "summary": "Update user",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "200": { "description": "User updated" },
          "404": { "description": "User not found" }
        }
      },
      "delete": {
        "summary": "Delete user",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "User deleted" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/dishes": {
      "get": {
        "summary": "Get all dishes",
        "tags": ["Dish"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "default": 1 },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "default": 10 },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": { "description": "List of dishes" }
        }
      },
      "post": {
        "summary": "Create new dish",
        "tags": ["Dish"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "price": { "type": "number" },
                  "category_id": { "type": "integer" },
                  "description": { "type": "string" },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Dish image file"
                  }
                },
                "required": ["name", "price", "category_id"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Dish created" }
        }
      }
    },
    "/dishes/{id}": {
      "put": {
        "summary": "Update dish",
        "tags": ["Dish"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "price": { "type": "number" },
                  "category_id": { "type": "integer" },
                  "description": { "type": "string" },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Dish image file"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Dish updated" },
          "404": { "description": "Dish not found" }
        }
      },
      "delete": {
        "summary": "Delete dish",
        "tags": ["Dish"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "Dish deleted" },
          "404": { "description": "Dish not found" }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "Get all orders",
        "tags": ["Order"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "default": 1 },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "default": 10 },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": { "description": "List of orders" }
        }
      },
      "post": {
        "summary": "Create new order",
        "tags": ["Order"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Order" }
            }
          }
        },
        "responses": {
          "201": { "description": "Order created" }
        }
      }
    },
    "/orders/{id}": {
      "put": {
        "summary": "Update order",
        "tags": ["Order"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Order" }
            }
          }
        },
        "responses": {
          "200": { "description": "Order updated" },
          "404": { "description": "Order not found" }
        }
      },
      "delete": {
        "summary": "Delete order",
        "tags": ["Order"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "Order deleted" },
          "404": { "description": "Order not found" }
        }
      }
    },
    "/categories": {
      "get": {
        "summary": "Get all categories",
        "tags": ["Category"],
        "responses": {
          "200": { "description": "List of categories" }
        }
      },
      "post": {
        "summary": "Create new category",
        "tags": ["Category"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Category" }
            }
          }
        },
        "responses": {
          "201": { "description": "Category created" }
        }
      }
    },
    "/categories/{id}": {
      "put": {
        "summary": "Update category",
        "tags": ["Category"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Category" }
            }
          }
        },
        "responses": {
          "200": { "description": "Category updated" },
          "404": { "description": "Category not found" }
        }
      },
      "delete": {
        "summary": "Delete category",
        "tags": ["Category"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "Category deleted" },
          "404": { "description": "Category not found" }
        }
      }
    },
    "/inventory": {
      "get": {
        "summary": "Get all inventory items",
        "tags": ["Inventory"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "default": 1 },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "default": 10 },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": { "description": "List of inventory items" }
        }
      },
      "post": {
        "summary": "Create new inventory item",
        "tags": ["Inventory"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Inventory" }
            }
          }
        },
        "responses": {
          "201": { "description": "Inventory item created" }
        }
      }
    },
    "/inventory/{id}": {
      "put": {
        "summary": "Update inventory item",
        "tags": ["Inventory"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Inventory" }
            }
          }
        },
        "responses": {
          "200": { "description": "Inventory item updated" },
          "404": { "description": "Inventory item not found" }
        }
      },
      "delete": {
        "summary": "Delete inventory item",
        "tags": ["Inventory"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "Inventory item deleted" },
          "404": { "description": "Inventory item not found" }
        }
      }
    },
    "/reservations": {
      "get": {
        "summary": "Get all reservations",
        "tags": ["Reservation"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "default": 1 },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "default": 10 },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": { "description": "List of reservations" }
        }
      },
      "post": {
        "summary": "Create new reservation",
        "tags": ["Reservation"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Reservation" }
            }
          }
        },
        "responses": {
          "201": { "description": "Reservation created" }
        }
      }
    },
    "/reservations/{id}": {
      "put": {
        "summary": "Update reservation",
        "tags": ["Reservation"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Reservation" }
            }
          }
        },
        "responses": {
          "200": { "description": "Reservation updated" },
          "404": { "description": "Reservation not found" }
        }
      },
      "delete": {
        "summary": "Delete reservation",
        "tags": ["Reservation"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "Reservation deleted" },
          "404": { "description": "Reservation not found" }
        }
      }
    },
    "/inventory-logs": {
      "get": {
        "summary": "Get all inventory logs",
        "tags": ["InventoryLog"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "default": 1 },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "default": 10 },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": { "description": "List of inventory logs" }
        }
      },
      "post": {
        "summary": "Create inventory log",
        "tags": ["InventoryLog"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InventoryLog" }
            }
          }
        },
        "responses": {
          "201": { "description": "Inventory log created" }
        }
      }
    },
    "/dish-ingredients": {
      "get": {
        "summary": "Get all dish ingredients",
        "tags": ["DishIngredient"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of dish ingredients" }
        }
      },
      "post": {
        "summary": "Create new dish ingredient",
        "tags": ["DishIngredient"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DishIngredient" }
            }
          }
        },
        "responses": {
          "201": { "description": "Dish ingredient created" }
        }
      }
    },
    "/dish-ingredients/{id}": {
      "put": {
        "summary": "Update dish ingredient",
        "tags": ["DishIngredient"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DishIngredient" }
            }
          }
        },
        "responses": {
          "200": { "description": "Dish ingredient updated" },
          "404": { "description": "Dish ingredient not found" }
        }
      },
      "delete": {
        "summary": "Delete dish ingredient",
        "tags": ["DishIngredient"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "Dish ingredient deleted" },
          "404": { "description": "Dish ingredient not found" }
        }
      }
    },
    "/order-items": {
      "get": {
        "summary": "Get all order items",
        "tags": ["OrderItem"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of order items" }
        }
      },
      "post": {
        "summary": "Create new order item",
        "tags": ["OrderItem"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderItem" }
            }
          }
        },
        "responses": {
          "201": { "description": "Order item created" }
        }
      }
    },
    "/order-items/{id}": {
      "put": {
        "summary": "Update order item",
        "tags": ["OrderItem"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrderItem" }
            }
          }
        },
        "responses": {
          "200": { "description": "Order item updated" },
          "404": { "description": "Order item not found" }
        }
      },
      "delete": {
        "summary": "Delete order item",
        "tags": ["OrderItem"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "Order item deleted" },
          "404": { "description": "Order item not found" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "RegisterUser": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string" }
        }
      },
      "LoginUser": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": { "type": "string" },
          "password": { "type": "string" }
        }
      },
      "User": {
        "type": "object",
        "required": ["name", "email", "password", "role"],
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string" },
          "role": { "type": "string", "enum": ["admin", "user"] },
          "created_at": { "type": "string", "format": "date-time" }
        }
      },
      "Dish": {
        "type": "object",
        "required": ["name", "price", "category_id"],
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "price": { "type": "number" },
          "category_id": { "type": "integer" },
          "description": { "type": "string" },
          "image_url": { "type": "string" },
          "is_available": { "type": "boolean" },
          "created_at": { "type": "string", "format": "date-time" }
        }
      },
      "Order": {
        "type": "object",
        "required": ["table_number", "items"],
        "properties": {
          "id": { "type": "integer" },
          "user_id": { "type": "integer" },
          "table_number": { "type": "integer" },
          "status": { "type": "string" },
          "total_amount": { "type": "number" },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["dish_id", "quantity"],
              "properties": {
                "dish_id": { "type": "integer" },
                "quantity": { "type": "integer" }
              }
            }
          },
          "created_at": { "type": "string", "format": "date-time" }
        }
      },
      "Category": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "description": { "type": "string" }
        }
      },
      "Inventory": {
        "type": "object",
        "required": ["name", "quantity", "unit"],
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "quantity": { "type": "integer" },
          "unit": { "type": "string" },
          "created_at": { "type": "string", "format": "date-time" }
        }
      },
      "Reservation": {
        "type": "object",
        "required": [
          "customer_name",
          "phone_number",
          "number_of_guests",
          "reservation_time"
        ],
        "properties": {
          "id": { "type": "integer" },
          "customer_name": {
            "type": "string",
            "description": "Tên khách đặt bàn"
          },
          "phone_number": {
            "type": "string",
            "description": "Số điện thoại khách"
          },
          "number_of_guests": {
            "type": "integer",
            "description": "Số lượng khách"
          },
          "reservation_time": {
            "type": "string",
            "format": "date-time",
            "description": "Thời gian đặt bàn"
          },
          "status": {
            "type": "string",
            "enum": ["booked", "canceled", "done"],
            "description": "Trạng thái đặt bàn"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Thời gian tạo"
          }
        }
      },
      "InventoryLog": {
        "type": "object",
        "required": ["inventory_id", "quantity_added"],
        "properties": {
          "id": { "type": "integer" },
          "inventory_id": { "type": "integer" },
          "quantity_added": {
            "type": "integer",
            "description": "Số lượng nhập/xuất"
          },
          "note": { "type": "string", "description": "Ghi chú" },
          "created_at": { "type": "string", "format": "date-time" }
        }
      },
      "DishIngredient": {
        "type": "object",
        "required": ["dish_id", "inventory_id", "quantity_required"],
        "properties": {
          "id": { "type": "integer" },
          "dish_id": { "type": "integer" },
          "inventory_id": { "type": "integer" },
          "quantity_required": {
            "type": "integer",
            "description": "Số lượng nguyên liệu cần cho món"
          }
        }
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "order_id": { "type": "integer" },
          "dish_id": { "type": "integer" },
          "name": { "type": "string" },
          "quantity": { "type": "integer" },
          "price": { "type": "number" }
        }
      }
    },
    "responses": {
      "400BadRequest": {
        "description": "Bad request"
      },
      "401Unauthorized": {
        "description": "Unauthorized"
      },
      "403Forbidden": {
        "description": "Forbidden"
      },
      "404NotFound": {
        "description": "Resource not found"
      },
      "500Internal": {
        "description": "Internal server error"
      }
    }
  }
}
